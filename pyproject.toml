[tool.poetry]
name = "pysquishy"
version = "0.1.20"
description = "LLVM pass wrapper library for creating robust shellcode"
authors = ["novafacing <rowanbhart@gmail.com>"]
license = "MIT"
readme = "README.md"
include = [
  "src",
  "include",
  "test/*.c",
  "test/*.py",
  "test/meson.build",
  "meson.build",
  "pysquishy/libwrap/*"
]
packages = [
  { include = "pysquishy/**/*" },
]

[tool.poetry.dependencies]
python = "^3.8"
lief = "^0.12.1"
coloredlogs = "^15.0.1"

[tool.poetry.group.dev.dependencies]
meson = "^0.63.0"
pytest = "^7.1.2"
pylint = "^2.14.5"
mypy = "^0.971"
black = "^22.6.0"
isort = "^5.10.1"

[tool.poetry.build]
script = "build.py"

[build-system]
requires = ["poetry-core>=1.1.0a6", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.messages_control]
max-line-length = 88
disable = ["attribute-defined-outside-init", "logging-fstring-interpolation"]

[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
class-attribute-naming-style = "snake_case"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
method-naming-style = "snake_case"
module-naming-style = "snake_case"
variable-naming-style = "any"

[tool.pylint.format]
expected-line-ending-format = "LF"
max-module-lines = 600
logging-format-style = "new"
max-args = 6
max-attributes = 12
max-bool-expr = 4
max-locals = 16
max-parents = 7
max-public-methods = 16
max-statements = 64
min-public-methods = 1
good-names = ["e", "cc"]

[tool.pylint.exceptions]
overgeneral-exceptions = "Exception"

[tool.black]
line-length = 88
target-version = ["py36", "py37", "py38", "py39", "py310", "py311"]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.mypy]
follow_imports = "normal"
disallow_any_unimported = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[tool.isort]
profile = "black"
multi_line_output = 3
use_parentheses = true